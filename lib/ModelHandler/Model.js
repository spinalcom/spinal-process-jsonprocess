"use strict";

// Generated by CoffeeScript 2.3.1
(function () {
  var G_root;

  require("spinal-core-connectorjs");

  G_root = typeof window === "undefined" ? global : window;

  module.exports = {
    /**
    * [Model] The declaration of the Model
     */
    modelType: G_root.Model,
    /**
    * [String] The constructor name of the Model
     */
    modelName: "Model",
    /**
    * [Number] the defaut handler executed is the one with the highiest priority
     */
    prority: 0,
    /**
    * [Function] The handler itself return a promise with the _json in the resolve
     */
    handler: function handler() {
      var _json, _model, model_key, prom;
      _json = this._json;
      _model = this._model;
      if (!_json.data) {
        _json.data = {};
      }
      for (model_key in _json.data) {
        if (_model._attribute_names.indexOf(model_key)) {
          delete _json.data[model_key];
        }
      }
      prom = function () {
        var i, len, ref, results;
        ref = _model._attribute_names;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          model_key = ref[i];
          if (typeof _json.data[model_key] === 'undefined') {
            results.push(G_root.JsonProcess._assignWithKey.call(this, _json.data, model_key, _model));
          } else if (_json.data[model_key]._server_id !== _model[model_key]._server_id) {
            delete _json.data[model_key];
            results.push(G_root.JsonProcess._assignWithKey.call(this, _json.data, model_key, _model));
          } else {
            results.push(_json.data[model_key]);
          }
        }
        return results;
      }.call(this);
      return Promise.all(prom).then(function (data) {
        return _json;
      });
    },
    /**
    * handler to "update" the max_depth of children
    * Optionnal, if  not definied will use the default one (Model / Lst / Ptr)
    * @returns a promise with the _json in the resolve
     */
    set_children_depth_handler: function set_children_depth_handler(_json, new_max_depth) {
      var _model, model_key, process, prom, targetJsonProcess;
      process = G_root.JsonProcess._getJsonProcess(_json);
      _model = process._model;
      prom = function () {
        var i, len, ref, results;
        ref = _model._attribute_names;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          model_key = ref[i];
          targetJsonProcess = G_root.JsonProcess._getJsonProcess(_json.data[model_key]);
          if (targetJsonProcess._max_depth < new_max_depth) {
            targetJsonProcess._max_depth = new_max_depth;
            targetJsonProcess._is_rdy = targetJsonProcess._update();
          }
          results.push(targetJsonProcess._is_rdy);
        }
        return results;
      }();
      return Promise.all(prom).then(function () {
        return process._json;
      });
    }
  };
}).call(undefined);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9Nb2RlbEhhbmRsZXIvTW9kZWwuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLENBQUEsWUFBQTtBQUFBLE1BQUEsTUFBQTs7QUFBQSxVQUFBLHlCQUFBOztBQUNBLFdBQVksT0FBQSxNQUFBLEtBQUgsV0FBRyxHQUFILE1BQUcsR0FBOEMsTUFBMUQ7O0FBRUEsU0FBQSxPQUFBLEdBQWlCOzs7O0FBS2YsZUFBVyxPQUxJLEtBQUE7Ozs7QUFVZixlQVZlLE9BQUE7Ozs7QUFlZixhQWZlLENBQUE7Ozs7QUFvQmYsYUFBUyxtQkFBQTtBQUNQLFVBQUEsS0FBQSxFQUFBLE1BQUEsRUFBQSxTQUFBLEVBQUEsSUFBQTtBQUFBLGNBQVEsS0FBQyxLQUFUO0FBQ0EsZUFBUyxLQUFDLE1BQVY7QUFDQSxVQUFvQixDQUFJLE1BQXhCLElBQUEsRUFBQTtBQUFBLGNBQUEsSUFBQSxHQUFBLEVBQUE7O0FBQ0EsV0FBQSxTQUFBLElBQUEsTUFBQSxJQUFBLEVBQUE7QUFDRSxZQUFJLE9BQU8sZ0JBQVAsQ0FBQSxPQUFBLENBQUosU0FBSSxDQUFKLEVBQUE7QUFDRSxpQkFBTyxNQUFNLElBQU4sQ0FEVCxTQUNTLENBQVA7O0FBRko7QUFHQSxhQUFBLFlBQUE7O0FBQU8sY0FBQSxPQUFBLGdCQUFBO0FBQUEsa0JBQUEsRUFBQTtBQUFBLGFBQUEsSUFBQSxDQUFBLEVBQUEsTUFBQSxJQUFBLE1BQUEsRUFBQSxJQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUE7O0FBQ0wsY0FBRyxPQUFPLE1BQU0sSUFBTixDQUFQLFNBQU8sQ0FBUCxLQUFILFdBQUEsRUFBQTt5QkFDRSxPQUFPLFdBQVAsQ0FBbUIsY0FBbkIsQ0FBQSxJQUFBLENBQUEsSUFBQSxFQUEwQyxNQUExQyxJQUFBLEVBQUEsU0FBQSxFQURGLE1BQ0UsQztBQURGLFdBQUEsTUFFSyxJQUFHLE1BQU0sSUFBTixDQUFXLFNBQVgsRUFBQSxVQUFBLEtBQW9DLE9BQU8sU0FBUCxFQUF2QyxVQUFBLEVBQUE7QUFDSCxtQkFBTyxNQUFNLElBQU4sQ0FBVyxTQUFYLENBQVA7eUJBQ0EsT0FBTyxXQUFQLENBQW1CLGNBQW5CLENBQUEsSUFBQSxDQUFBLElBQUEsRUFBMEMsTUFBMUMsSUFBQSxFQUFBLFNBQUEsRUFGRyxNQUVILEM7QUFGRyxXQUFBLE1BQUE7eUJBSUgsTUFBTSxJQUFOLENBSkcsU0FJSCxDOztBQVBHOztPQUFQLEMsSUFBQSxDLElBQUEsQ0FBQTtBQVFBLGFBQU8sUUFBQSxHQUFBLENBQUEsSUFBQSxFQUFBLElBQUEsQ0FBdUIsVUFBQSxJQUFBLEVBQUE7QUFDNUIsZUFBTyxLQUFQO0FBREssT0FBQSxDQUFQO0FBbkNhLEtBQUE7Ozs7OztBQTJDZixnQ0FBNEIsb0NBQUEsS0FBQSxFQUFBLGFBQUEsRUFBQTtBQUMxQixVQUFBLE1BQUEsRUFBQSxTQUFBLEVBQUEsT0FBQSxFQUFBLElBQUEsRUFBQSxpQkFBQTtBQUFBLGdCQUFVLE9BQU8sV0FBUCxDQUFBLGVBQUEsQ0FBQSxLQUFBLENBQVY7QUFDQSxlQUFTLFFBQVEsTUFBakI7QUFDQSxhQUFBLFlBQUE7O0FBQU8sY0FBQSxPQUFBLGdCQUFBO0FBQUEsa0JBQUEsRUFBQTtBQUFBLGFBQUEsSUFBQSxDQUFBLEVBQUEsTUFBQSxJQUFBLE1BQUEsRUFBQSxJQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUE7O0FBQ0wsOEJBQW9CLE9BQU8sV0FBUCxDQUFBLGVBQUEsQ0FBbUMsTUFBTSxJQUFOLENBQW5DLFNBQW1DLENBQW5DLENBQXBCO0FBQ0EsY0FBSSxrQkFBQSxVQUFBLEdBQUosYUFBQSxFQUFBO0FBQ0UsOEJBQUEsVUFBQSxHQUErQixhQUEvQjtBQUNBLDhCQUFBLE9BQUEsR0FBNEIsa0JBRjlCLE9BRThCLEVBQTVCOzt1QkFDRixrQkFBa0IsTztBQUxiOztPQUFQLEVBQUE7QUFNQSxhQUFPLFFBQUEsR0FBQSxDQUFBLElBQUEsRUFBQSxJQUFBLENBQXVCLFlBQUE7QUFDNUIsZUFBTyxRQUFRLEtBQWY7QUFESyxPQUFBLENBQVA7QUFUMEI7QUEzQ2IsR0FBakI7Q0FIQSxFLElBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwic3BpbmFsLWNvcmUtY29ubmVjdG9yanNcIilcbkdfcm9vdCA9IGlmIHR5cGVvZiB3aW5kb3cgPT0gXCJ1bmRlZmluZWRcIiB0aGVuIGdsb2JhbCBlbHNlIHdpbmRvd1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblxuICAjIyMqXG4gICogW01vZGVsXSBUaGUgZGVjbGFyYXRpb24gb2YgdGhlIE1vZGVsXG4gICMjI1xuICBtb2RlbFR5cGU6IEdfcm9vdC5Nb2RlbCxcblxuICAjIyMqXG4gICogW1N0cmluZ10gVGhlIGNvbnN0cnVjdG9yIG5hbWUgb2YgdGhlIE1vZGVsXG4gICMjI1xuICBtb2RlbE5hbWU6IFwiTW9kZWxcIixcblxuICAjIyMqXG4gICogW051bWJlcl0gdGhlIGRlZmF1dCBoYW5kbGVyIGV4ZWN1dGVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgaGlnaGllc3QgcHJpb3JpdHlcbiAgIyMjXG4gIHByb3JpdHk6IDBcblxuICAjIyMqXG4gICogW0Z1bmN0aW9uXSBUaGUgaGFuZGxlciBpdHNlbGYgcmV0dXJuIGEgcHJvbWlzZSB3aXRoIHRoZSBfanNvbiBpbiB0aGUgcmVzb2x2ZVxuICAjIyNcbiAgaGFuZGxlcjogKCkgLT5cbiAgICBfanNvbiA9IEBfanNvblxuICAgIF9tb2RlbCA9IEBfbW9kZWxcbiAgICBfanNvbi5kYXRhID0ge30gaWYgKG5vdCBfanNvbi5kYXRhKVxuICAgIGZvciBtb2RlbF9rZXkgb2YgX2pzb24uZGF0YVxuICAgICAgaWYgIF9tb2RlbC5fYXR0cmlidXRlX25hbWVzLmluZGV4T2YobW9kZWxfa2V5KVxuICAgICAgICBkZWxldGUgX2pzb24uZGF0YVttb2RlbF9rZXldXG4gICAgcHJvbSA9IGZvciBtb2RlbF9rZXkgaW4gX21vZGVsLl9hdHRyaWJ1dGVfbmFtZXNcbiAgICAgIGlmIHR5cGVvZiBfanNvbi5kYXRhW21vZGVsX2tleV0gaXMgJ3VuZGVmaW5lZCdcbiAgICAgICAgR19yb290Lkpzb25Qcm9jZXNzLl9hc3NpZ25XaXRoS2V5LmNhbGwoQCwgX2pzb24uZGF0YSwgbW9kZWxfa2V5LCBfbW9kZWwpXG4gICAgICBlbHNlIGlmIF9qc29uLmRhdGFbbW9kZWxfa2V5XS5fc2VydmVyX2lkICE9IF9tb2RlbFttb2RlbF9rZXldLl9zZXJ2ZXJfaWRcbiAgICAgICAgZGVsZXRlIF9qc29uLmRhdGFbbW9kZWxfa2V5XVxuICAgICAgICBHX3Jvb3QuSnNvblByb2Nlc3MuX2Fzc2lnbldpdGhLZXkuY2FsbChALCBfanNvbi5kYXRhLCBtb2RlbF9rZXksIF9tb2RlbClcbiAgICAgIGVsc2VcbiAgICAgICAgX2pzb24uZGF0YVttb2RlbF9rZXldXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHByb20pLnRoZW4oKGRhdGEpIC0+XG4gICAgICByZXR1cm4gX2pzb24pXG5cbiAgIyMjKlxuICAqIGhhbmRsZXIgdG8gXCJ1cGRhdGVcIiB0aGUgbWF4X2RlcHRoIG9mIGNoaWxkcmVuXG4gICogT3B0aW9ubmFsLCBpZiAgbm90IGRlZmluaWVkIHdpbGwgdXNlIHRoZSBkZWZhdWx0IG9uZSAoTW9kZWwgLyBMc3QgLyBQdHIpXG4gICogQHJldHVybnMgYSBwcm9taXNlIHdpdGggdGhlIF9qc29uIGluIHRoZSByZXNvbHZlXG4gICMjI1xuICBzZXRfY2hpbGRyZW5fZGVwdGhfaGFuZGxlcjogKF9qc29uLCBuZXdfbWF4X2RlcHRoKSAtPlxuICAgIHByb2Nlc3MgPSBHX3Jvb3QuSnNvblByb2Nlc3MuX2dldEpzb25Qcm9jZXNzKF9qc29uKVxuICAgIF9tb2RlbCA9IHByb2Nlc3MuX21vZGVsXG4gICAgcHJvbSA9IGZvciBtb2RlbF9rZXkgaW4gX21vZGVsLl9hdHRyaWJ1dGVfbmFtZXNcbiAgICAgIHRhcmdldEpzb25Qcm9jZXNzID0gR19yb290Lkpzb25Qcm9jZXNzLl9nZXRKc29uUHJvY2VzcyhfanNvbi5kYXRhW21vZGVsX2tleV0pXG4gICAgICBpZiAodGFyZ2V0SnNvblByb2Nlc3MuX21heF9kZXB0aCA8IG5ld19tYXhfZGVwdGgpXG4gICAgICAgIHRhcmdldEpzb25Qcm9jZXNzLl9tYXhfZGVwdGggPSBuZXdfbWF4X2RlcHRoXG4gICAgICAgIHRhcmdldEpzb25Qcm9jZXNzLl9pc19yZHkgPSB0YXJnZXRKc29uUHJvY2Vzcy5fdXBkYXRlKClcbiAgICAgIHRhcmdldEpzb25Qcm9jZXNzLl9pc19yZHlcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbSkudGhlbigoKSAtPlxuICAgICAgcmV0dXJuIHByb2Nlc3MuX2pzb25cbiAgICApXG59Il0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9
//# sourceURL=/home/laurent/share_to_send/modules/spinal-process-jsonprocess/src/ModelHandler/Model.coffee